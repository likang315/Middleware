<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context-3.0.xsd
          http://www.springframework.org/schema/aop
          http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
          http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    <!--      
        <aop:aspectj-autoproxy/>
          <context:annotation-config/>
          <context:component-scan base-package="com.*"></context:component-scan>  -->
<!--           
<bean id="ds" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
    <property name="url" value="jdbc:mysql://localhost:3306/spring"/>
    <property name="username" value="root"/>
    <property name="password" value="mysql"/>
     连接池启动时的初始值
	 <property name="initialSize" value="1"/>
	 连接池的最大值
	 <property name="maxActive" value="500"/>
	 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止
	 <property name="maxIdle" value="2"/>
	  最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请
	 <property name="minIdle" value="1"/>
  </bean>

<bean id="jdbcTem" class="org.springframework.jdbc.core.JdbcTemplate">
  <constructor-arg ref="ds"></constructor-arg>
</bean>

<bean id="daoBase" abstract="true">
   <property name="jdbcTemplate" ref="jdbcTem"></property>
</bean>

<bean id="logsDao" class="com.hw.dao.imp.LogsDaoImp" parent="daoBase"></bean>
<bean id="usersDao" class="com.hw.dao.imp.UsersDaoImp" parent="daoBase"></bean>


<bean id="serviceBase" abstract="true">
  <property name="logsDao" ref="logsDao"></property>
  <property name="usersDao" ref="usersDao"></property>
</bean>

<bean id="managerService" class="com.hw.service.imp.ManagerServiceImp" parent="serviceBase"></bean>


<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
  <property name="dataSource" ref="ds"/>
</bean>

<tx:advice id="txAdvice" transaction-manager="txManager">
  <tx:attributes>
    <tx:method name="get*" read-only="true"/>
    <tx:method name="*"/>
  </tx:attributes>
</tx:advice>
<tx:annotation-driven transaction-manager="txManager"/> -->

</beans>
