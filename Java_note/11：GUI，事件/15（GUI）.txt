GUI:图形用户界面

java.awt ：抽象窗口工具包，提供创建窗口和绘制图形图像的所有类。 
Swing:在awt包的基础之上进行了优化，提供了可跨平台并且比较复杂的组件，例如，树状结构，表格等等组件

布局：了解三个简单的布局

	流式布局：FlowLayout类的实例给我们提供该布局，流布局用于安排有向流中的组件，这非常类似于段落中的文本行。

	方位布局：BorderLayout类的实例给我们提供方位布局，一个布置容器的边框布局，它可以对容器组件进行安排，并调整其大小，使其符合下列五个区域：北、南、东、西、中

	网格布局：Gridlayout类的实例提供网格布局，GridLayout 类是一个布局处理器，它以矩形网格形式对容器的组件进行布置。
 
  Swing包：

	JFrame ：java.awt.Frame 的子类，是带有标题和边框的顶层窗口，该版本添加了对 JFC/Swing 组件架构的支持。 
	JPanel ：JPanel 是一般轻量级容器，构造方法摘要 
		Panel() --------使用默认的布局管理器创建新面板。 

	JTextArea ：  是一个显示纯文本的多行区域。 
	JTextField ： 是一个轻量级组件，它允许编辑单行文本。 
	JButton ：    "push" 按钮的实现。 


容器是一个可以包含组件和其他容器的组件。容器还可以具有布局管理器，用来控制容器中组件的可视化布局

	继承者 java.awt.Component
     	    继承者 java.awt.Container
      	  	  继承者 java.awt.Window
         	     继承者 java.awt.Frame
          	        继承者 javax.swing.JFrame


	component：组件类，是所有 AWT 组件的顶级父类。主要添加事件监听器方法

 		void addFocusListener(FocusListener l) 
 	   		添加指定的焦点侦听器，以便当此组件获得输入焦点时能够接收发自此组件的焦点事件。
 		void addKeyListener(KeyListener l) 
          		添加指定的按键侦听器，以接收发自此组件的按键事件。 
 		void addMouseListener(MouseListener l) 
          		添加指定的鼠标侦听器，以接收发自此组件的鼠标点击，双击事件。 
 		void addMouseMotionListener(MouseMotionListener l) 
          		添加指定的鼠标移动侦听器，以接收发自此组件的鼠标移动事件。 
 		void addMouseWheelListener(MouseWheelListener l) 
          		添加指定的鼠标滚轮侦听器，以接收发自此组件的鼠标滚轮事件。



	类 Label：对象是一个可在容器中放置只读文本的组件。一个标签只显示一行只读文本。

	类 List ：为用户提供了一个可下拉菜单。

	类 Choice：表示一个弹出式选择菜单，当前的选择显示为菜单的标题。 

	类 Checkbox：多选框是一个可处于“开”(true) 或“关”(false) 状态的图形组件。component的子类
	
		构造方法：	
			Checkbox(String label) 
          			使用指定名称创建一个复选框。 
			Checkbox(String label, boolean state) 
          			使用指定标名称创建一个复选框，并将它设置为指定状态，true时为选择状态。 
		方法：
			void addItemListener(ItemListener l) 
        			添加指定的项侦听器，以接收来自此复选框的项事件。 


	类 TextComponent：所有允许编辑文本的组件的父类。
		子类：
			TextArea：文本域
			TextField ：文本行


	类 Button：创建一个标签按钮。当按下该按钮时，应用程序能执行某项动，component的子类

		构造方法：
			Button(String label) 
        		  	构造一个带指定名称的按钮。
		方法：
			void addActionListener(ActionListener l) 
          		  	添加指定的动作侦听器，以接收发自此按钮的动作事件。 




	类 Container：容器类的父类，一般的 Abstract Window Toolkit(AWT) 容器对象，也是一个可包含其他 AWT 组件的组件，进行组件布局
		void add(Component comp, Object constraints) 
      		   	将指定的组件添加到此容器的尾部。 
 		void add(Component comp, Object constraints, int index) 
          		使用指定约束，将指定组件添加到此容器的指定索引所在的位置上。  


		类Panel： 是最简单的容器类。应用程序可以将其他组件放在面板提供的空间内，这些组件包括其他面板，默认的布局是 FlowLayout 布局管理器

			 void setBounds(int x, int y, int width, int height) 
          			设置组件的大小。 

		类JPanel： 是一般轻量级容器，和JFrame都是带有标题和边框的容器窗口，用来往里面已添加组件的。

		类Window：是一个没有边界和菜单栏的顶层窗口。窗口的默认布局是 BorderLayout。 

			void setAlwaysOnTop(boolean alwaysOnTop) 
         	 		设置此窗口是否应该始终位于其他窗口上方。 
			void setVisible(boolean b) 
        	  		根据参数 b 的值显示或隐藏此 Window 
			void setSize(int width, int height) 
          			调整窗口的大小，使其宽度为 width，高度为 height。 
	


			类Frame和类JFrame（升级版）： 是带有标题和边框的顶层窗口，大小包括窗体边框
	
			属性：
				Frame(String title) 
          				构造一个新的、最初不可见的、具有指定标题的 Frame 对象。
			方法：	

	
				void setDefaultCloseOperation(int operation) 
          				设置用户在此窗体上点击“X”时默认执行的操作。 	
					EXIT_ON_CLOSE（在 JFrame 中定义）：使用 System exit 方法退出应用程序。仅在应用程序中使用。 
				
				void setLocationRelativeTo(Component c)

					设置窗口相对于指定组件的位置。
					如果组件当前未显示或者 c 为 null，则此窗口将置于屏幕的中央。

        			void setIconImage(Image image) 
          				设置要窗口图标要显示的图像。 

				void setResizable(boolean resizable) 
          				设置此窗体是否可由用户调整大小 
	
				void setTitle(String title) 
          				将此窗体的标题设置为指定的字符串 

	框架（Frame类）和面板（Panel类）。

		框架是一个带有边框的独立的窗口。

		面板是包含在窗口中的一个不带边框的区域。
	

	类 Image：抽象类 Image 是表示图形图像的所有类的超类，必须以特定于平台的方式获取图像。 

		BufferedImage 子类描述具有可访问图像数据缓冲区的 Image
	属性：
		BufferedImage(int width, int height, int imageType) 
      	   	 	构造一个类型为预定义图像类型之一的 BufferedImage。


	Class对象：
		getResource(String name) --------- 查找带有给定名称的资源，路径在当前包下
		如果 name 以 '/' ('\u002f') 开始，则绝对资源名是 '/' 后面的 name 的一部分。 
		否则，绝对名具有以下形式： 
   		modified_package_name/name，其中 modified_package_name 是此对象的包名，该名用 '/' 取代了 '.' ('\u002e')。 



类 Graphics：提供在组件上打印文字，显示图像的方法，图形上下文就是窗口空间
	 void paint(Graphics g) 
         	 由 Swing 调用，以绘制组件 

Awt线程，会在此类对象创建时，JVM会自动创建Graphics对象，自动调用paint（）方法，调用repaint()时，会调用update（）方法，清除组件表面内容，在调用paint（）方法

方法：
	abstract  void drawLine(int x1, int y1, int x2, int y2) 
         	在此图形上下文的坐标系中，使用当前颜色在点 (x1, y1) 和 (x2, y2) 之间画一条线 
	abstract  boolean drawImage(Image img, int x, int y, int width,int height ，null) 
          	绘制指定图像中当前可用的图像。 
	abstract  void drawString(String str, int x, int y) 
          	使用此图形上下文的当前字体和颜色绘制由指定 string 给定的文本 
	abstract  void setColor(Color c) 
          	将此图形上下文的当前颜色设置为指定颜色。 
	abstract  void setFont(Font font) 
          	将此图形上下文的字体设置为指定字体。 


类Color：颜色类
类Font：字体类


	类Toolkit:用来得到屏幕的宽度和加载图片
		static Toolkit getDefaultToolkit() 
     			得到类的实例
		abstract  Image getImage(URL url) 
          		返回一幅图像，该图像从指定 URL 获取像素数据。 
		abstract  Dimension getScreenSize() 
         		获取屏幕的大小，即宽度。 





















